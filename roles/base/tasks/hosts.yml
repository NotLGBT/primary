---
  

    - name: create a full clone of the templ with id 
      community.general.proxmox_kvm:
        api_host: "{{ api_host_name }}"
        api_user: "{{ api_user_name }}"
        api_token_secret: 3ef49c37-c605-42bf-950b-69a69e3540b5 
        api_token_id: ansible 
        node: "{{ node_name }}"
      
        clone: "{{ vm_template }}"
        vmid: "{{ templ_id }}"
        full: yes
        newid: "{{ vms.vm1.vm_new_id  }}"
        name: "{{ vms.vm1.vm_new_name }}"
        storage: "{{ storage_name }}"
        format: raw
        timeout: 300
      loop: "{{ lookup('dict', vms, wantlist=True) }}"  
    

    - name: update VM's cpu/memory 
      community.general.proxmox_kvm:
        api_host: "{{ api_host_name }}"
        api_user: "{{ api_user_name }}"
        api_token_secret: 3ef49c37-c605-42bf-950b-69a69e3540b5 
        api_token_id: ansible 
        api_password: "{{ api_pass }}"
        node: "{{ node_name }}"
  
        update: yes
        vmid: "{{ vms.vm1.vm_new_id }}"
        sockets: "{{ vms.vm1.sock }}"
        cores: "{{ vms.vm1.core }}"
        memory: "{{ vms.vm1.mem }}"
      loop: "{{ lookup('dict', vms, wantlist=True) }}"
      register: instanceip
  
    # - name: setting disk size 
    #   shell: qm resize {{ vms.vm1.vm_new_id  }} scsi0 {{ vms.vm1.disk_size }}
    #   loop: "{{ lookup('dict', vms, wantlist=True) }}"  
  
    # - name: setting network with addr {{ ip_value }}/24
    #   shell: qm set {{ vms.vm1.vm_new_id }} -net0 {{ net_value }} -ipconfig0 'gw={{ gw_value }},ip={{ vms.vm1.ip_value }}/24' -nameserver '{{ nameservers }}' -searchdomain {{ domain }}
    #   loop: "{{ lookup('dict', vms, wantlist=True) }}"
  
    - name: add cloudinit user and ssh pub key to VM
      community.general.proxmox_kvm:
        api_host: "{{ api_host_name }}"
        api_user: "{{ api_user_name }}"
        api_password: "{{ api_pass }}"
        node: "{{ node_name }}"
        vmid: "{{ vms.vm1.vm_new_id }}"
        update: yes
        ciuser: root
  
        sshkeys: "{{ ssh_pub }}"      
      loop: "{{ lookup('dict', vms, wantlist=True) }}"
  
    - name: starting VM
      community.general.proxmox_kvm:
  
        api_host: "{{ api_host_name }}"
        api_user: "{{ api_user_name }}"
        api_password: "{{ api_pass }}"
        node: "{{ node_name }}"
  
        vmid: "{{ vms.vm1.vm_new_id }}"
        state: started
      loop: "{{ lookup('dict', vms, wantlist=True) }}"
  
  
  